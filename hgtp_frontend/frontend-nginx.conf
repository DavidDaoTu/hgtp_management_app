### References:
# 1. https://github.com/kubernetes/website/blob/main/content/en/examples/service/access/frontend-nginx.conf
# 2. https://github.com/kubernetes/website/blob/main/content/en/examples/service/access/Dockerfile
# 3. https://kubernetes.io/docs/tasks/access-application-cluster/connecting-frontend-backend/
# 4. https://nginx.org/en/docs/beginners_guide.html
# 5. https://www.nginx.com/resources/wiki/start/topics/examples/full/

# This is the default conf
server {
    listen       80;
    listen  [::]:80;
    listen      30000;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        
        
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
    # location /api {
    #     # The following statement will proxy/forward traffic to the upstream named reverseproxy
    #     proxy_pass http://reverseproxy/api;
    # }
}

